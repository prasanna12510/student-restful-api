name: student-api-code-deploy
on:
  push:
    branches:
      - master
    tags:
      - STUDENT-API-PLAY-CODE-*
    paths:
      - "student_service/code-deploy/**"
      - "student_service/source-code/**"

jobs:
  student-api-unit-test:
    name: Test - Units
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn clean package -DSkipTests
        working-directory: student_service/source-code

  sonar:
    name: Test - SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: SonarCloud Scan
        run: mvn -B clean verify -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        working-directory: student_service/source-code
        env:
          GITHUB_TOKEN: ${{ secrets.REPOSITORY_ACCESS_TOKEN }}

  artifact:
    name: Publish - GitHub Packages
    runs-on: ubuntu-latest
    needs: [student-api-unit-test,sonar]

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Publish artifact on GitHub Packages
        run: mvn -B clean deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.REPOSITORY_ACCESS_TOKEN }}


  student-api-image-build:
    name: Publish - Docker Hub
    runs-on: ubuntu-latest
    needs: [student-api-unit-test,sonar]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: login docker
        run : make docker-login
        env :
          DOCKER_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          DOCKER_USERNAME: prasanna1994

      - name: Build docker image and push to docker_hub
        run : mvn install dockerfile:build
        working-directory: student_service/source-code
        env:
          MASTER_COMMIT_ID: ${{ toJson(github.sha) }}

      - name: push docker image to docker_hub
        run : |
          export APP_TAG=`sed -e 's/^"//' -e 's/"$//' <<<"$MASTER_COMMIT_ID" | cut -c1-7`
          make docker-retag-push
        env:
          MASTER_COMMIT_ID: ${{ toJson(github.sha) }}
          DOCKER_USERNAME: prasanna1994
          DOCKER_REPO: student-api

  student-api-ecs-deployment:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    needs: student-api-image-build
    steps:
      - name: checkout public repo
        uses: actions/checkout@master

      - name: Get the latest terraform version
        run: make terraform-install

      - name: apply terraform
        run: |
          export APP_TAG=`sed -e 's/^"//' -e 's/"$//' <<<"$MASTER_COMMIT_ID" | cut -c1-7` && sed -i -e "s/APP_TAG/$APP_TAG/g" *.tf
          make terraform-apply
        working-directory: student_service/code-deploy/
        env:
          TF_IN_AUTOMATION: true
          TF_WORKSPACE: play
          TF_CLOUD_TOKEN: ${{ secrets.TF_CLOUD_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          MASTER_COMMIT_ID: ${{ toJson(github.sha) }}
